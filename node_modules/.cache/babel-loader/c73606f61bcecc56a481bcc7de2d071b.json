{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Resume\\\\Javascript\\\\React\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //prop is a property of component and the attributes of that component are the properties of prop\n      count: this.props.value //tags: [\"tag1\", \"tag2\", \"tag3\"]\n\n    };\n\n    this.handleIncrement = () => {\n      //   setState is the method inherit from the base component, tells the react that we are changing the state and then\n      //   it figures this out that what part of the state is changed and based on that it will bring the dom in sync with\n      //   the virtual dom.\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadge(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.formating()), React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"btn btn-primary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"button\", {\n      onClick: () => this.props.onDelete(this.props.id),\n      className: \"btn btn-danger btn-sm m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Delete\"));\n  }\n\n  getBadge() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formating() {\n    const count = this.state.count;\n    return count === 0 ? \"zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:\\Learning\\Resume\\Javascript\\React\\counter-app\\src\\components\\counter.jsx"],"names":["React","Component","Counter","state","count","props","value","handleIncrement","setState","render","getBadge","formating","onDelete","id","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACN;AACAC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAFZ,CAGN;;AAHM,KADsB;;AAAA,SAO9BC,eAP8B,GAOZ,MAAM;AACtB;AACA;AACA;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,KAZ6B;AAAA;;AAc9BK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAE,KAAKC,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,SAAL,EAAnC,CADF,EAEE;AACE,MAAA,OAAO,EAAE,KAAKJ,eADhB;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAQE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWO,QAAX,CAAoB,KAAKP,KAAL,CAAWQ,EAA/B,CADjB;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF;AAsBD;;AACDH,EAAAA,QAAQ,GAAG;AACT,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKX,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOU,OAAP;AACD;;AAEDH,EAAAA,SAAS,GAAG;AAAA,UACFP,KADE,GACQ,KAAKD,KADb,CACFC,KADE;AAEV,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA/C6B;;AAkDhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    //prop is a property of component and the attributes of that component are the properties of prop\r\n    count: this.props.value\r\n    //tags: [\"tag1\", \"tag2\", \"tag3\"]\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    //   setState is the method inherit from the base component, tells the react that we are changing the state and then\r\n    //   it figures this out that what part of the state is changed and based on that it will bring the dom in sync with\r\n    //   the virtual dom.\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className={this.getBadge()}>{this.formating()}</span>\r\n        <button\r\n          onClick={this.handleIncrement}\r\n          className=\"btn btn-primary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n        {/* <ul>\r\n          {this.state.tags.map(tag => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul> */}\r\n      </div>\r\n    );\r\n  }\r\n  getBadge() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formating() {\r\n    const { count } = this.state;\r\n    return count === 0 ? \"zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}