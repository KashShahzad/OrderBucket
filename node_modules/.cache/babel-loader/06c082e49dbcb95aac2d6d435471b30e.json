{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Resume\\\\Javascript\\\\React\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  //FOR THE SAKE OF SINGLE SOURCE OF TRUTH\n  //   state = {\n  //     //prop is a property of component and the attributes of that component are the properties of prop\n  //     count: this.props.counter.value\n  //     //tags: [\"tag1\", \"tag2\", \"tag3\"]\n  //   };\n  //   handleIncrement = () => {\n  //     //   setState is the method inherit from the base component, tells the react that we are changing the state and then\n  //     //   it figures this out that what part of the state is changed and based on that it will bring the dom in sync with\n  //     //   the virtual dom.\n  //     this.setState({ count: this.state.count + 1 });\n  //   };\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadge(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.formating()), React.createElement(\"button\", {\n      //onClick={this.handleIncrement}\n      onClick: () => this.props.onIncrement(this.props.counter),\n      className: \"btn btn-primary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"button\", {\n      onClick: () => this.props.onDelete(this.props.counter.id),\n      className: \"btn btn-danger btn-sm m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Delete\"));\n  }\n\n  getBadge() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\"; // classes += this.props.counter.value = 0 ? \"warning\" : \"primary\";\n\n    return classes;\n  }\n\n  formating() {\n    // const { count } = this.state;\n    const count = this.props.counter.count;\n    return count === 0 ? \"zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:\\Learning\\Resume\\Javascript\\React\\counter-app\\src\\components\\counter.jsx"],"names":["React","Component","Counter","render","getBadge","formating","props","onIncrement","counter","onDelete","id","classes","state","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAE,KAAKC,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,SAAL,EAAnC,CADF,EAEE;AACE;AACA,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,OAAlC,CAFjB;AAGE,MAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EASE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,EAAvC,CADjB;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF;AAuBD;;AACDN,EAAAA,QAAQ,GAAG;AACT,QAAIO,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD,CAFS,CAGT;;AACA,WAAOF,OAAP;AACD;;AAEDN,EAAAA,SAAS,GAAG;AACV;AADU,UAEFQ,KAFE,GAEQ,KAAKP,KAAL,CAAWE,OAFnB,CAEFK,KAFE;AAGV,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAnD6B;;AAsDhC,eAAeX,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  //FOR THE SAKE OF SINGLE SOURCE OF TRUTH\r\n  //   state = {\r\n  //     //prop is a property of component and the attributes of that component are the properties of prop\r\n  //     count: this.props.counter.value\r\n  //     //tags: [\"tag1\", \"tag2\", \"tag3\"]\r\n  //   };\r\n\r\n  //   handleIncrement = () => {\r\n  //     //   setState is the method inherit from the base component, tells the react that we are changing the state and then\r\n  //     //   it figures this out that what part of the state is changed and based on that it will bring the dom in sync with\r\n  //     //   the virtual dom.\r\n  //     this.setState({ count: this.state.count + 1 });\r\n  //   };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className={this.getBadge()}>{this.formating()}</span>\r\n        <button\r\n          //onClick={this.handleIncrement}\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-primary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n        {/* <ul>\r\n          {this.state.tags.map(tag => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul> */}\r\n      </div>\r\n    );\r\n  }\r\n  getBadge() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    // classes += this.props.counter.value = 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formating() {\r\n    // const { count } = this.state;\r\n    const { count } = this.props.counter;\r\n    return count === 0 ? \"zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}